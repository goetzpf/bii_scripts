#!/bin/bash

# Copyright 2015 Helmholtz-Zentrum Berlin f√ºr Materialien und Energie GmbH
# <https://www.helmholtz-berlin.de>
#
# Author: Goetz Pfeiffer <Goetz.Pfeiffer@helmholtz-berlin.de>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# 
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
set -e

shopt -s nocasematch

SCRIPT_FULL_NAME=$(readlink -e $0)
MYDIR=$(dirname $SCRIPT_FULL_NAME)
MYNAME=$(basename $SCRIPT_FULL_NAME)
TOP=$(readlink -e $MYDIR/..)
# TOP needed for default bii_scripts.config

verbose=""
dryrun=""

# "" stands for "bii", the default
facility="bii"

# directory to create:
dir=""

function print_short_help {
    echo "$MYNAME: restore a version of IDCP"
    echo "usage:"
    echo "  $MYNAME [options] VERSION"
    echo "      [VERSION] must be the ISO date string as it is used by"
    echo "      rsync-dist. "
    echo "options:"
    echo "  -h: this help"
    echo "  --dir DIR : Create source tree in directory DIR. Otherwise a"
    echo "              directory name is created from the VERSION string"
    echo "              in the form YYYY-MM-DDTHHMMSS."
    echo "  -f --facility [FACILITY]: define facility, currently known:"
    echo "        bii      : BESSY storage ring, the default"
    echo "        mls      : MLS storage ring"
    echo "  --verbose : show executed command"
    echo "  --dry-run : just show how rsync-dist-info.py would be called"
}

function CMD {
    # $1: command
    if [ -n "$verbose" -o -n "$dryrun" ]; then
        echo "$1"
    fi
    if [ -z "$dryrun" ]; then
        bash -c "$1"
    fi
}

function CD {
    # $1: dir
    if [ -n "$verbose" -o -n "$dryrun" ]; then
        echo "cd $1"
    fi
    if [ -z "$dryrun" ]; then
        cd "$1" > /dev/null
    fi
}

declare -a ARGS

while true; do
    case "$1" in
      -h | --help)
        print_short_help
        exit 0
        ;;
      --dir)
        dir="$2"
        shift 2
        ;;
      -f| --facility)
        while true; do
            if [[ $2 =~ ^bii ]]; then
                facility="bii"
                shift 2
                break
            fi
            if [[ $2 =~ ^mls ]]; then
                facility="mls"
                shift 2
                break
            fi
        done
        ;;
      --verbose)
        verbose="yes"
        shift
        ;;
      --dry-run)
        dryrun="yes"
        shift
        ;;
      -- ) shift; break ;;
      * ) 
        if [ -z "$1" ]; then
            break;
        fi
        ARGS+=("$1")
        shift
        ;;
    esac
done

# read bii_scripts configuration variables:
if [ -e $MYDIR/bii_scripts.config ]; then
    . $MYDIR/bii_scripts.config
else
    echo "error, file bii_scripts.config not found" >&2
    exit
fi

# The share directory is defined by SHARE_INSTALL_DIR from file 
# bii_scripts.config:
BII_SCRIPTS_SHARE_DIR="$SHARE_INSTALL_DIR"

CONFIGFILE_PATH=$BII_SCRIPTS_SHARE_DIR/bii_scripts/rsync-dist 

configfile="$CONFIGFILE_PATH/idcp-$facility"

source $configfile
# take only the first rsync dist host if there is more than one:
RSYNC_DIST_HOST=$(echo $RSYNC_DIST_HOST | sed -e 's/,.*//')
RSYNC_DIST_USER=$(echo $RSYNC_DIST_USER | sed -e 's/,.*//')

VERSION=${ARGS[0]}
QVERSION=`echo $VERSION | sed -e 's/:/\\:/g'`
if [ -z "$dir" ]; then
    MYVERSION=`echo $VERSION | sed -e 's/://g'`
else
    MYVERSION="$dir"
fi

if [ -d "$MYVERSION" -a -z "$dryrun" ]; then
    echo "error, directory $MYVERSION already exists"
    exit 1
fi

echo -e "* creating directory $MYVERSION"
CMD "mkdir $MYVERSION"
CD "$MYVERSION"

echo -e "* fetching hg recover files from boot directory...\n"

# automatic script abort switched off here:
set +e


CMD "scp $RSYNC_DIST_USER@$RSYNC_DIST_HOST:$RSYNC_DIST_PATH/$QVERSION/dbd/hg-recover* ."
if [ "$?" -ne 0 ]; then 
    echo 
    echo "error, no restore data found for $VERSION"
    echo "command:"
    echo -e "\t$CMD"
    exit 1
fi

if [ -e hg-recover.tar.gz -a -z "$dryrun" ]
then
    # old hg-recover
    echo -e "\n* recovering idcp working directory..."
    CMD "hg-recover.py -r hg-recover.tar.gz"
    CD ".."
else
    # new hg-recover with 
    # idcp_db recover information
    echo -e "\n* recovering idcp working directory..."
    CMD "hg-recover.py -r -f hg-recover-idcp.tar.gz"
    # Note: in case of an error we continue here on purpose in order to at
    # least restore the id_db directory. The script does not abort in case of
    # an error due to "set +e" before.
    if [ -z "$dryrun" ]; then
        CD $(ls -d idcp*)
    else
        echo "cd idcp*"
    fi
    if [ -e ../hg-recover-idcp_db.tar.gz -a -z "$dryrun" ]; then
        # old idcp_db directory
        echo -e "* recovering idcp_db working directory..."
        CMD "hg-recover.py -r -f ../hg-recover-idcp_db.tar.gz"
    fi 
    if [ -e ../hg-recover-id_db.tar.gz -o -n "$dryrun" ]; then
        # the newer version, id_db
        add_ons_used=""
        if [ -z "$dryrun" ]; then
            if grep '^\(IDCP_DATABASE\|MINISD_CACHE\).*ID_DB_DIR' config/config.template > /dev/null; then
                add_ons_used="yes"
            fi
        fi
        if [ -z "$add_ons_used" -a -z "$dryrun" ]
        then
                # id_db is placed in "idcp"
                echo -e "* recovering idcp/id_db working directory..."
                CMD "hg-recover.py -r -f ../hg-recover-id_db.tar.gz"
        else
                # id_db is placed in "idcp/add_ons/src"
                echo -e "* recovering idcp/add_ons/src/id_db working directory..."
                CMD "mkdir -p add_ons/src"
                CD "add_ons/src"
                CMD "hg-recover.py -r -f ../../../hg-recover-id_db.tar.gz"
                CD "../.."
        fi
    fi
    CD "../.."
fi
echo -e "\nversion $VERSION was restored in directory $MYVERSION"

