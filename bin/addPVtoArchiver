#!/usr/bin/env tclsh
# -*- tcl -*-

# Copyright 2015 Helmholtz-Zentrum Berlin f√ºr Materialien und Energie GmbH
# <https://www.helmholtz-berlin.de>
#
# Author: Thomas Birke <Thomas.Birke@helmholtz-berlin.de>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# 
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.


package require Tclx
package require http

# http://arc11c.trs.bessy.de:4811/addchannel?GROUP=GrOuP&CHANNEL=ChAnNeL&PERIOD=PeRiOd&MONITOR=1

proc usage {{msg ""}} {
  if {$msg != ""} {puts stderr "Error: $msg\n"}
  puts stderr "USAGE: addPVtoArchiver <archiver> <group> <channel> <period> \[mon\] \[dis\]"
  puts stderr "where:\n\t<archiver>\tis one of ctl, blc, csr, id and misc"
  puts stderr "\t<group>\t\tis an existing group-name in the archiver-config"
  puts stderr "\t<channel>\tis the name of the PV to add"
  puts stderr "\t<period>\tis the min. time \[s\] between events on this PV"
  puts stderr "\tmon, dis\tare optional and flag this PV as 'monitored' or 'disabling group'"
  exit
}

if {[llength $argv] < 4} {usage "too few arguments"}

array set hosts {
    ctl  arc11c.trs.bessy.de:4811
    blc  arc11c.trs.bessy.de:4812 
    csr  arc11c.trs.bessy.de:4821 
    id   arc11c.trs.bessy.de:4841
    misc arc11c.trs.bessy.de:4842
    mls  arc1cp.mlscs.bessy.de:4811
}

set rest [lassign $argv archiver group channel period]

if {[array names hosts $archiver] == ""} {usage "archiver '$archiver' not found"}
set host $hosts($archiver)

if {[catch {set period [format %.3f $period]}]} {
  usage "given period seems not to be numeric..."
}
if {$period == 0} {
  usage "given period equals to 0.0..."
}


set req "http://$host/addchannel?GROUP=$group&CHANNEL=$channel&PERIOD=$period"

if {[lsearch $rest "mon"] >= 0} {append req "&MONITOR=1"}
if {[lsearch $rest "dis"] >= 0} {append req "&DISABLE=1"}

set tok [http::geturl $req]
http::wait $tok
set str [split [http::data $tok] "\n"]
http::cleanup $tok
set a [lsearch $str "*Cannot*"]
if {$a >= 0} {usage [lindex $str $a]}

set a [lsearch $str "*added*"]
if {$a >= 0} {
  set msg [regsub -all "<.?I>" [lindex $str $a] ""]
  puts $msg
}

#puts ""
#puts $str
