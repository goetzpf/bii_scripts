#!/usr/bin/python

from optparse import OptionParser
import sys, os

my_version = "0.2"

parser = OptionParser(usage="%prog [options] PV [PV ...]",
                      version="%%prog %s" % my_version,
                      description="""Retrieve archived data and present it in a camonitor-like way.""")


parser.set_defaults(start="-1d")
parser.set_defaults(end="now")
parser.set_defaults(at=None)
parser.set_defaults(glob=False)
parser.set_defaults(regexp=False)
parser.set_defaults(spreadsheet=False)
parser.set_defaults(facility=None)
parser.set_defaults(index="master_index")

parser.add_option("--start", action="store", type="string", help="start time of query (default: '-1d')", dest="start")
parser.add_option("--end",   action="store", type="string", help="end time of query   (default: 'now')",   dest="end")
parser.add_option("--at",    action="store", type="string", help="start and end time of query (default: '-1d')", dest="at")
parser.add_option("--glob", action="store_true", help="PV (only one allowed) is a glob-pattern", dest="glob")
parser.add_option("--re", action="store_true", help="PV (only one allowed) is a regexp", dest="regexp")
parser.add_option("--spreadsheet", action="store_true", help="output as spreadsheet (default: as camonitor)", dest="spreadsheet")
parser.add_option("--facility", action="store", type="string", help="facility to search (bii, mls or hobicat, default is all)", dest="facility")
parser.add_option("--index", action="store", type="string", help="index to search (default is \"master_index\" for all useful: e.g. year_index_2013 for older data from BII)", dest="index")
(options, args) = parser.parse_args()

if len(args) == 0:
    parser.print_help()
    sys.exit(0)

archs =  []
archs += [("bii",     "archiver",       "")]
archs += [("mls",     "archiver.mlscs", "")]
archs += [("hobicat", "archiver",       "hobicat/")]

if options.at is not None:
    options.start=options.at
    options.end=options.at

spec="&STRSTART=1&STARTSTR=%s&STREND=1&ENDSTR=%s" % (options.start, options.end)

if (options.glob):
    spec+="&GLOB=ON"
if (options.regexp or options.glob):
    spec+="&PATTERN=%s" % args[0]
else:
    spec+="&NAMES=%s" % "+".join(args)

format="camonitor"
if options.spreadsheet:
    format="Spreadsheet"
                  
wget=""
for (tag, srv, dir) in archs:
    if (options.facility is None or options.facility == tag):
        wget+="wget -q -O - \"http://%s.bessy.de/cgi/CGIExport.cgi?INDEX=/opt/Archive/%s%s&COMMAND=%s%s\";" % (srv, dir, options.index, format, spec)


fltr="egrep -v -e '(Gnuplot|0000-00-00|;)' -e '^$'"
if (not options.at is None):
    fltr+=" | sed 's/ x....-..-.. ..:..:..\....... / /'"

if options.spreadsheet:
    os.system("(%s) | %s" % (wget, fltr))
else:
    os.system("(%s) | %s | sort -b -k 2,3" % (wget, fltr))
