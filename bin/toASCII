#! /usr/bin/env python
import sys
from optparse import OptionParser
from curses.ascii import controlnames 

def proc(ar):
    repStr = "'"
    for ch in ar: 
	nr = int(ch,16)
	if nr < 32:
    	    repStr += "<"+controlnames[nr]+">"
	elif nr < 127:
    	    repStr += chr(nr)
	elif nr == 127:
    	    repStr += "<DEL>"
	else:
    	    repStr += chr(nr)

    return repStr+"'"
delim = ' '
usage        = """toASCII [options] [STDIN]:  
\tPrint hex-numbers from STDIN as characters, 
\tconvert control signals to mnemonics
"""
parser = OptionParser(usage=usage,
		 version="%%prog 1.0",
    		 description=usage)
parser.add_option("-i","--interactive",
		 action="store_true", # default: None
		 help="wait for input, end with <q>", 
    		 )
parser.add_option("-d","--delimiter",
		 action="store", # default: None
		 type="string",
		 help="delimiter (default ' ')", 
    		 )
try:
    (options,args) = parser.parse_args()
except:
    sys.exit()
if len(args)==0 and options.interactive is None: 
    print usage
    sys.exit(0)
if options.delimiter is not None: 
    delim = options.delimiter
if options.interactive:
    print "wait for input, exit with 'q'"
    inStr = sys.stdin.readline()
    while inStr != "q\n":
    	print proc(inStr.split(' '))
	inStr = sys.stdin.readline()
else:
    print proc(args)
