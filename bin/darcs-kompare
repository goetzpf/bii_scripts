#!/bin/sh

ME=`basename "$0"`

if [ "$1" == "-h" -o "$1" == "--help" ]; then
    echo -e "$ME : use 'kompare' to show patches and diffs for darcs repos"
    echo -e "usage:"
    echo -e "\t$ME [options]"
    echo
    echo -e "examples:"
    echo -e "\t$ME"
    echo -e "\t\t-> show unrecorded changes"
    echo -e "\t$ME --patch PATCH"
    echo -e "\t\t-> show changes of patch PATCH"
    echo -e "\t$ME --from-patch FROM-PATCH --to-patch TO-PATCH"
    echo -e "\t\t-> show changes from 'FROM-PATCH' to 'TO-PATCH'"
    echo -e "Handling of options:"
    echo -e "\tAll options of $ME are given to the 'darcs diff' command"
    echo -e "\tso you can use all valid darcs options."
    echo -e "Patch specifications:"
    echo -e "\t'PATCH', 'FROM-PATCH' and 'TO-PATCH' are *patch specifications*"
    echo -e "\tThey ary usually the first line of the patch comment without"
    echo -e "\tthe leading '  * ' and enclosed in single quotes."
    echo -e "Special characters in patch specifications:"
    echo -e "\tSince a *patch specification* is a *regular expression*,"
    echo -e "\tall characters that have special meanings in regular expressions"
    echo -e "\tshould be preceeded by a backslash '\\' if they are to be"
    echo -e "\tinterpreted literally. This is for example the case for"
    echo -e "\tthese characters:   *()[]"
    exit 1
fi

echo | darcs diff --diff-command="kompare %1 %2" "$@" > /dev/null &
