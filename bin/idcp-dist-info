#!/bin/sh

CONFIGFILE=/opt/csr/share/rsync-dist/idcp

opts="-c $CONFIGFILE"

function print_short_help {
    echo "$0: a small wrapper that calls rsync-dist-info.py"
    echo "options:"
    echo "  -h: this help"
    echo "  -H: this text PLUS the help from rsync-dist-info.py"
    echo "  --id [ID] : filter for this insertion device"
    echo "  --ids : filter for all ID's that are installed and use"
    echo "      the rsync-dist.pl (Ue56/2 is not in this list)"
    echo "  --id-list : show the known insertion devices and their idcp-name"
    echo "  --dry-run : just show how rsync-dist-info.py would be called"
}

function print_long_help {
    print_short_help
    echo 
    echo "the following options are known to rsync-dist-info.py and can "
    echo "also be used here:"
    echo
    rsync-dist-info.py -h
}

# declare all known insertion devices in a hash:

IDs='U125/2:3\n
U125ID2R:3\n
UE56/2:5\n
UE56ID3R:5\n
U49/1:7\n
U49ID4R:7\n
UE49:8\n
UE49IT4R:8\n
UE52:9\n
UE52ID5R:9\n
UE46:10\n
UE46IT5R:10\n
UE56/1:11\n
UE56ID6R:11\n
U139:110\n
U139ID6R:110\n
U41:12\n
U41IT6R:12\n
UE112:13\n
UE112ID7R:13\n
U49/2:15\n
U49ID8R:15\n
'

installed_ids="^idcp(3|5|7|8|9|10|11|12|13|15|110)$"

function list_ids {
    tags=`echo "$IDs" | sed -e 's/\([^:]\+\):\([^:]\+\):\([^:]\+\)/\\t\1\\t: \2/g'`
    echo -e "$tags" | expand -t 10
    exit 0
}

realargs="$@"
while [ $# -gt 0 ]; do
    case "$1" in
      -h)
        print_short_help
        exit 0
        ;;
      -H)
        print_long_help
        exit 0
        ;;
      --id-list)
        list_ids
        exit 0
        ;;
      --id)
        no=`echo -e "$IDs" | egrep "^$2:"`
        no=`echo $no | sed -e 's/^[^:]\+://g'`
        if [[ -z "$no" ]]; then
            echo "unknown ID:$2"
            exit 1
        fi
        opts="$opts --filter-names idcp$no"
        shift
        ;;
      --idcp)
        opts="$opts --filter-names idcp$2"
        shift
        ;;
      --ids)
        opts="$opts --filter-names-rx $installed_ids"
        ;;
      -n| --names| -v| --versions| -l| --lifetimes| --idle| --boot-times| --version-info)
        saveme="$saveme $1"
        cmd_given="yes"
        ;;
      --last)
        saveme="$saveme $1 $2"
        shift
        last_given="yes"
        ;;
      --dry-run)
        dryrun="yes"
        ;;
      *)
        saveme="$saveme $1"
        #break 2
        ;;
    esac
    shift
done

if [[ -z "$cmd_given" ]]; then
    opts="$opts -n"
fi
if [[ -z "$last_given" ]]; then
    opts="$opts --last 10"
fi

opts="$opts $saveme"

#set -- $realargs

#echo saved word: $saveme
#echo run real command: "$@"
#echo "opts: $opts"
if [[ -z "$dryrun" ]]; then
    rsync-dist-info.py $opts
else
    echo "rsync-dist-info.py $opts"
fi

